---
name: ClangFormat Check suggestions

# read-write repo token
# access to secrets
on:
  workflow_run:
    workflows: ["ClangFormat Check"]
    types:
      - completed

jobs:
  upload:
    runs-on: ubuntu-latest
    if: >
      (github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success')  || 
      (github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'failure')
    permissions:
      actions: read
      contents: read
      checks: write
      issues: write
      pull-requests: write
    steps:
      # Debug
      - name: Dump GitHub context
        continue-on-error: true
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
      - name: Create a .git directory needed by reviewdog
        run: git init
      - name: "Download artifact"
        uses: actions/github-script@v7.0.1
        with:
          script: |
            var artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr"
            })[0];
            var download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));
      - run: unzip pr.zip
      # - name: "Comment on PR"
      #   uses: actions/github-script@v7.0.1
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       var fs = require('fs');
      #       var issue_number = Number(fs.readFileSync('./NR'));
      #       await github.rest.issues.createComment({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         issue_number: issue_number,
      #         body: 'Everything is OK. Thank you for the PR!'
      #       });
      # - name: "Comment on PR"
      #   uses: actions/github-script@v7.0.1
      #   env:
      #     NR: ${{ github.event.workflow_run.pull_requests[0].number }} # TODO: might not work from fork
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const { NR } = process.env
      #       var fs = require('fs');
      #       var issue_number = NR;
      #       await github.rest.issues.createComment({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         issue_number: issue_number,
      #         body: 'Everything is OK. Thank you for the PR!'
      #       });
      - uses: reviewdog/action-setup@v1
      - uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
        with:
          name: diff
          # github-token: ${{ secrets.GH_PAT }} # token with actions:read permissions on target repo
          github-token: ${{ github.token }}
          # repository: actions/toolkit
          run-id: ${{github.event.workflow_run.id }}
      - run: ls -la
      - run: echo "$GITHUB_EVENT_PATH"
      - run: cat "$GITHUB_EVENT_PATH"
      - run: |
          GITHUB_ACTIONS="" \
            reviewdog \
              -name="${INPUT_TOOL_NAME:-reviewdog-suggester}" \
              -f=diff \
              -f.diff.strip=1 \
              -filter-mode=nofilter \
              -tee \
              -guess \
              -reporter="github-pr-review" < "${TMPFILE}"
        env:
          TMPFILE: diff-clang-format.patch
          INPUT_TOOL_NAME: clang-format
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # CI_PULL_REQUEST: 13
          CI_COMMIT: ${{ github.event.workflow_run.head_sha }}
          CI_REPO_OWNER: ${{ github.event.workflow_run.repository.owner.login }}
          CI_REPO_NAME: ${{ github.event.workflow_run.repository.name }}
